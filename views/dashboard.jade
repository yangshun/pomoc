extends layout
  
block content 
  link(rel='stylesheet', href='/css/dashboard.css')
  link(rel="stylesheet", href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css")
  body(class="dashboard", ng-app, ng-controller="DashboardController")
    div(class="page-container")
      div(class="row")
        div(class="main-col menu-col")
          div(class="menu-item menu-thumbnail")
            img(class="media-object img-rounded", src="/img/shun.jpg")
            h2 Yang Shun
          div(class="menu-item")
            i(class="fa fa-comments")
            h3 Chats
          div(class="menu-item")
            i(class="fa fa-bookmark-o")
            h3 Bookmarks
          div(class="menu-item")
            i(class="fa fa-tags")
            h3 Issues
          div(class="menu-item")
            i(class="fa fa-trash-o")
            h3 Trash

        div(class="main-col chats-col")
          ul(class="media-list")
            li(class="media chat-item", ng-repeat="chat in chats", ng-click="selectChat($index)")
              a(class="pull-left")
                img(class="media-object img-rounded", ng-src="{{ getThumbnailImageForType('user') }}")
              div(class="media-body")
                h4(class="media-heading") {{ chat.name }}
                p(class="chat-message", ng-show="chat.chat_messages.length == 0") No chat history to display
                p(class="chat-message", ng-show="chat.chat_messages.length > 0") {{ chat.chat_messages[chat.chat_messages.length-1].message }}
                  span(class="badge pull-right", ng-show="chat.unread_count > 0") {{ chat.unread_count }}

        div(class="main-col chat-messages-col")
          div(class="nav-bar") 
            h1 {{ chats[selectedChatIndex].name }}

          div(class="chat-messages")
            
            div(class="no-convo" ng-show="chats[selectedChatIndex].chat_messages.length == 0")
              p 
                i(class="fa fa-comments")
              p There are no conversations to display

            ul(class="media-list", ng-show="chats[selectedChatIndex].chat_messages.length > 0")
              li(class="media {{ getThumbnailSideForType(item.type) }}", ng-repeat="item in chats[selectedChatIndex].chat_messages")
                a(class="pull-left")
                  img(class="media-object img-rounded", ng-src="{{ getThumbnailImageForType(item.type) }}")
                div(class="media-body")
                  h4(class="media-heading") {{ item.name }}
                  p(class="chat-message") {{ item.message }}
          div(class="message-input")
            form(class="input-group form-search", ng-submit="submit()")
              input(id="message-box", type="text", class="form-control search-query", placeholder="Your Message Here", ng-model="input_message", autocomplete="off")
              span(class="input-group-btn")
                button(type="submit", class="btn btn-primary", data-type="last") Send

    script(src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.15/angular.min.js")
    script(src="/socket.io/socket.io.js")
    script(src='/una_js/una.js')
    script.

      var room_id = 'test';
      var ADMIN_ID = 'admin';
      var ADMIN_NAME = 'Yang Shun';
      var screen_data = { name: ADMIN_NAME };
      

      UnaScreen.register(room_id, screen_data, function(res) {
        if (res.success) {
          // Screen registered successfully
          console.log(res);
        } else {
          console.log('Registration failed');
        }
      });
      
      function DashboardController($scope) {

        function scrollToBottom() {
          var height = _.reduce($('.chat-messages > *'), function(memo, item) {
            return memo + $(item).height();
          }, 0);
          $('.chat-messages').animate({ scrollTop: height }, "slow");
        }

        $scope.chats = [];
        $scope.selectedChatIndex = undefined;

        function addNewChat(id, name, message) {
          $scope.chats.push({ 
            id: id, 
            name: name, 
            chat_messages: [],
            unread_count: 0
          });
          if ($scope.chats.length === 1) {
            $scope.selectedChatIndex = 0;
          }
          if (message) {
            appendNewMessage(id, name, message);
          }
          $scope.$apply();
        }

        function appendNewMessage(id, name, message, type) {
          for (var i = 0; i < $scope.chats.length; i++) {
            if (id === $scope.chats[i].id) {
              $scope.chats[i].chat_messages.push({ 
                name: name, 
                message: message,
                type: 'user'
              });
              if ($scope.selectedChatIndex !== i) {
                $scope.chats[i].unread_count++;
              }
              setTimeout(function() {
                scrollToBottom();
              }, 0)
              return;
            }
          }
          if (i === $scope.chats.length) {
            addNewChat(id, name, message);
          }
        }

        UnaScreen.onControllerJoin(function(data) {
          console.log('New user has joined');
          console.log(data)
          addNewChat(data.una.id, data.una.user_data.name);
          return true;
        });

        UnaScreen.onControllerInput('message', function(res) {
          // event_key: This string should correspond to the string passed in to the `sendToScreen` function from the Controller
          // res.una: Una header
          // res.una.user_data: The user data of the Controller sender
          // res.una.id: Unique id of the sender
          // res.payload: Payload object that was sent by the controller
          console.log(res.una.user_data, res.una.id, res.payload);
          appendNewMessage(res.una.id, res.una.user_data.name, res.payload.message);
          $scope.$apply();
        });

        UnaScreen.onControllerLeave(function(res) {    
          for (var i = 0; i < $scope.chats.length; i++) {
            if (res.una.id === $scope.chats[i].id) {
              console.log(res.una.id + ' has went offline');
              // Handle user leaving
            }
          }
        });

        $scope.selectChat = function(index) {
          $scope.selectedChatIndex = index;
          $scope.chats[index].unread_count = 0;
          setTimeout(function() {
            scrollToBottom(true);
          }, 0);
        }

        $scope.getThumbnailImageForType = function(type) {
          switch(type) {
            case 'admin':
              return '/img/shun.jpg';
            case 'user':
            default:
              return '/img/chuck.jpg'
          }
        }

        $scope.getThumbnailSideForType = function(type) {
          switch(type) {
            case 'admin':
              return 'right-side';
            case 'user':
            default:
              return 'left-side';
          }
        }

        $scope.submit = function(event) {
          
          var msg = $.trim($scope.input_message);
          if (!msg) {
            return;
          }
          var msg_obj = {
            name: ADMIN_NAME,
            message: msg,
            type: 'admin'
          };
          console.log('sid:', $scope.chats[$scope.selectedChatIndex].id);
          UnaScreen.sendToController($scope.chats[$scope.selectedChatIndex].id, 'message', msg_obj);
          $scope.chats[$scope.selectedChatIndex].chat_messages.push(msg_obj);
          $scope.input_message = '';
          scrollToBottom();
        }
      }

